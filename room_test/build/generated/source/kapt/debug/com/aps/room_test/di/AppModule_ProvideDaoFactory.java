// Generated by Dagger (https://dagger.dev).
package com.aps.room_test.di;

import com.aps.room_test.data.local.ContactDao;
import com.aps.room_test.data.local.ContactDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideDaoFactory implements Factory<ContactDao> {
  private final Provider<ContactDatabase> databaseProvider;

  public AppModule_ProvideDaoFactory(Provider<ContactDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public ContactDao get() {
    return provideDao(databaseProvider.get());
  }

  public static AppModule_ProvideDaoFactory create(Provider<ContactDatabase> databaseProvider) {
    return new AppModule_ProvideDaoFactory(databaseProvider);
  }

  public static ContactDao provideDao(ContactDatabase database) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideDao(database));
  }
}
